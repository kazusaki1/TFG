# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-18 22:46
from __future__ import unicode_literals

import abstractApp.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50, verbose_name='Marca')),
                ('event_name', models.CharField(max_length=20, verbose_name='Nombre del evento')),
                ('event_description', models.CharField(max_length=150, verbose_name='Descripcion del evento')),
                ('coorX', models.CharField(max_length=10, verbose_name='Coordenada X')),
                ('coorY', models.CharField(max_length=10, verbose_name='Coordenada Y')),
                ('reward', models.CharField(max_length=70, verbose_name='Recompensa')),
            ],
            options={
                'verbose_name_plural': 'Crear evento',
            },
        ),
        migrations.CreateModel(
            name='EventoLimitado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ini_date', models.DateTimeField(validators=[abstractApp.models.fechaIniMayorActual], verbose_name='Fecha de inicio')),
                ('exp_date', models.DateTimeField(validators=[abstractApp.models.fechaExpMayorIni], verbose_name='Fecha de fin')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.Evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name_plural': 'Convertir evento en evento limitado',
            },
        ),
        migrations.CreateModel(
            name='EventoParada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.Evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name_plural': 'Convertir evento en evento parada',
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='', verbose_name='Imagen')),
            ],
            options={
                'verbose_name_plural': 'Imagenes',
            },
        ),
        migrations.CreateModel(
            name='Recompensa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_name', models.CharField(max_length=70, verbose_name='Recompensa')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[abstractApp.models.mayorZero], verbose_name='Cantidad')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('user_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name_plural': 'Modificar usuario',
            },
        ),
        migrations.CreateModel(
            name='UsuarioEventoLimitado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.EventoLimitado', verbose_name='Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.Usuario', verbose_name='Usuario')),
            ],
            options={
                'verbose_name_plural': 'Inscribir usuario a evento limitado',
            },
        ),
        migrations.CreateModel(
            name='UsuarioEventoParada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_use', models.DateTimeField(verbose_name='Ultima vez usado')),
                ('cooldown', models.DurationField(verbose_name='Tiempo de espera')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.EventoParada', verbose_name='Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.Usuario', verbose_name='Usuario')),
            ],
            options={
                'verbose_name_plural': 'Inscribir usuario a evento parada',
            },
        ),
        migrations.AddField(
            model_name='recompensa',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstractApp.Usuario', verbose_name='Usuario'),
        ),
        migrations.AlterUniqueTogether(
            name='usuarioeventoparada',
            unique_together=set([('user', 'event')]),
        ),
        migrations.AlterUniqueTogether(
            name='usuarioeventolimitado',
            unique_together=set([('user', 'event')]),
        ),
    ]
